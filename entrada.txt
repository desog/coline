

public class Main {

int val = 10;
double r = 33.0;
String cad = null;


public static void main() {
int asd;
int as = 10;
int alanise = 100;
double diego = 30.0;
printTabla(); 
}

void PasoObjeto(Archivo arch){
    println(arch.var1);
}


 int original(int a){
    println(a);
    println("NO SOBRECARGADO");
 }

 int original(int a, int b){
 println(a);
 println(b);
    println("SOBRECARGADO");
 }

 int hofstaderFemenina(int n) {
        if (n < 0) {
            return 0;
        } else {
            return (n == 0) ? 1 : n - hofstaderFemenina(n - 1);
        }
    }

    int hofstaderMasculino(int n) {
        if (n < 0) {
            return 0;
        } else {
            return n == 0 ? 0 : n - hofstaderMasculino(n - 1);
        }
    }


int particion(int arreglo[], int bajo, int alto) {
        int pivote = arreglo[alto];
        int i = (bajo - 1);
        for (int j = bajo; j < alto; j++) {
            if (arreglo[j] <= pivote) {
                i++;
                int temp = arreglo[i];
                arreglo[i] = arreglo[j];
                arreglo[j] = temp;
            }
        }
        int temp = arreglo[i + 1];
        arreglo[i + 1] = arreglo[alto];
        arreglo[alto] = temp;
        return i + 1;
    }

    void quickSort(int arreglo[], int bajo, int alto) {
        if (bajo < alto) {
            int pi = particion(arreglo, bajo, alto);
            quickSort(arreglo, bajo, pi - 1);
            quickSort(arreglo, pi + 1, alto);
        }

    }

int reverse(int x, int length) {
        if (length == 1) {
            return x;
        } else {
            int b = x % 10;
            x = x / 10;
            return ((b * pow(10, length - 1)) + reverse(x, --length));
        }
    }

public void calculo(int numero){
    if(numero<30){
        println(fibonacci(numero) + "CALCULO EL FIBONACCI");
    }else if(numero <40){
        println("ERROR");
        return;
    }
}

int potencia(int base, int exp) {
        return exp == 0 ? 1 : (base * potencia(base, exp - 1));
    }

public int factorial (int numero) {
  if (numero==0){
    return 1;
  }
    
  else{
    return numero * factorial(numero-1);
  }
    
}



public boolean esIgual(){
    return a==b;
}

public int ackermann(int m,int n){
    if(m == 0){
        return (n + 1);
    }else if(m > 0 && n == 0){
        return ackermann(m - 1, 1);
    }else{
        return ackermann(m - 1, ackermann(m, n - 1));
    }
}


}


