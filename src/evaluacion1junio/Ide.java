/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package evaluacion1junio;

import static evaluacion1junio.Evaluacion1Junio.ejecutar;
import static evaluacion1junio.Evaluacion1Junio.ejecutardebug;
import java.awt.event.MouseEvent;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextPane;
import javax.swing.JViewport;
import javax.swing.event.MouseInputListener;

/**
 *
 * @author Diego
 */
public class Ide extends javax.swing.JFrame {
    public static plantilla template;
    public static ClosableTabbedPane jTabbedPane1 = new ClosableTabbedPane(){
        public boolean tabAboutToClose(int tabIndex) {
                String tab = jTabbedPane1.getTabTitleAt(tabIndex);
                int choice = JOptionPane.showConfirmDialog(null, 
                   "Esta apunto de cerrar la pestaña" + 
                   tab + "'\nRealmente quiere hacerlo?", 
                   "Confirmation Dialog", 
                   JOptionPane.INFORMATION_MESSAGE);
                String nombre =jTabbedPane1.getTabTitleAt(tabIndex);
                QuitarArchivo(nombre);
                return choice == 0;
                // if returned false tab
                // closing will be canceled
            }};
    
public List<ClosableTabbedPane> listaPestaña = new ArrayList<ClosableTabbedPane>() {};
public int indexpestaña;
public static List<Archivo> ListaArchivo = new ArrayList<Archivo>();

    /**
     * Creates new form Ide
     */
    public Ide() {
        jTabbedPane1.setSize(1366, 704);
        getContentPane().add(jTabbedPane1);
       
        jTabbedPane1.addMouseListener(new MouseInputListener() {
            @Override
            public void mouseClicked(MouseEvent e) {
                 indexpestaña= jTabbedPane1.getSelectedIndex();
                 System.out.println(jTabbedPane1.getSelectedIndex() );
                 
            }

            @Override
            public void mousePressed(MouseEvent e) {
            }
            @Override
            public void mouseReleased(MouseEvent e) {
                //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }

            @Override
            public void mouseEntered(MouseEvent e) {
                //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }

            @Override
            public void mouseExited(MouseEvent e) {
                
            }

            @Override
            public void mouseDragged(MouseEvent e) {
               // throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }

            @Override
            public void mouseMoved(MouseEvent e) {
                //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }
 
        });
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenu5 = new javax.swing.JMenu();
        jMenuItem7 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jMenu1.setText("Archivo");

        jMenuItem1.setText("Abrir");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("Guardar");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem6.setText("Guardar Como");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem6);

        jMenuBar1.add(jMenu1);

        jMenu3.setText("Pestaña");

        jMenuItem3.setText("Nueva Pestaña");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem3);

        jMenuBar1.add(jMenu3);

        jMenu4.setText("Errores");

        jMenuItem4.setText("Ver Errores");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem4);

        jMenuBar1.add(jMenu4);

        jMenu2.setText("Ejecutar");

        jMenuItem5.setText("Ejecutar FS");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem5);

        jMenuBar1.add(jMenu2);

        jMenu5.setText("Debugger");

        jMenuItem7.setText("Iniciar");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem7);

        jMenuBar1.add(jMenu5);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 277, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        String aux = "";
        String texto = "";
        String nombre = "";
        String ruta="";
        try{
            JFileChooser file = new JFileChooser(System.getProperty("user.dir"));
            file.showOpenDialog(this);
            File archivo = file.getSelectedFile();
            nombre= archivo.getName();
            ruta = archivo.getAbsolutePath();
            if (archivo != null) {
                FileReader archivos = new FileReader(archivo);
                BufferedReader leer = new BufferedReader(archivos);
                while ((aux = leer.readLine()) != null) {
                    texto += aux + "\n";
                }
                leer.close();
            }
            template = new plantilla(texto);

            jTabbedPane1.addTab(nombre, template.getContentPane());
            ListaArchivo.add(new Archivo(nombre,ruta));
        }catch (IOException ex) {
            JOptionPane.showMessageDialog(null, "Error Importando - " + ex);
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        try
        {
            String nombre=jTabbedPane1.getTitleAt(indexpestaña);
            Archivo archivo = ObtenerArchivo(nombre);
            File guarda = null;
            if(archivo!=null){
                String ruta = archivo.getRuta();
                guarda = new File(ruta);
            }

            JPanel p = (JPanel) jTabbedPane1.getComponent(0);
            JScrollPane j = (JScrollPane) p.getComponent(0);
            JViewport v = (JViewport) j.getComponent(0);
            JTextPane txt = (JTextPane) v.getComponent(0);

            if(guarda !=null)
            {
                FileWriter  save=new FileWriter(guarda,false);
                save.write(txt.getText());
                save.close();
                JOptionPane.showMessageDialog(null,
                    "El archivo se a guardado Exitosamente",
                    "Información",JOptionPane.INFORMATION_MESSAGE);
            }
        }
        catch(IOException ex)
        {
            JOptionPane.showMessageDialog(null,
                "Su archivo no se ha guardado",
                "Advertencia",JOptionPane.WARNING_MESSAGE);
        }

    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        try
        {
            String nombre="";
            JFileChooser file=new JFileChooser();
            file.showSaveDialog(this);
            File guarda =file.getSelectedFile();
            JPanel p = (JPanel) jTabbedPane1.getComponent(0);
            JScrollPane j = (JScrollPane) p.getComponent(0);
            JViewport v = (JViewport) j.getComponent(0);
            JTextPane txt = (JTextPane) v.getComponent(0);

            if(guarda !=null)
            {
                FileWriter  save=new FileWriter(guarda);
                save.write(txt.getText());
                save.close();
                JOptionPane.showMessageDialog(null,
                    "El archivo se a guardado Exitosamente",
                    "Información",JOptionPane.INFORMATION_MESSAGE);
            }
        }
        catch(IOException ex)
        {
            JOptionPane.showMessageDialog(null,
                "Su archivo no se ha guardado",
                "Advertencia",JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    public Archivo ObtenerArchivo(String nombre){
        nombre = nombre.trim();
      if(ListaArchivo.size()!=0){
                    for(Archivo a : ListaArchivo){
                        if(a.getNombre().equals(nombre)){
                            return a;
                        }
                    }
                }
      return null;
    }
    
     public static void QuitarArchivo(String nombre){
        if(ListaArchivo.size()!=0){
                    for(Archivo a : ListaArchivo){
                        if(a.getNombre().equals(nombre)){
                            ListaArchivo.remove(a);
                            break;
                        }
                    }
                }
    }
    
    
    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        plantilla planti = new plantilla();
        jTabbedPane1.addTab("Nuevo", planti.getContentPane());
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // ---------------------ERRORES------------------------------

    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        Archivo a =ObtenerArchivo(jTabbedPane1.getTabTitleAt(indexpestaña));
        if(a!=null){ 
        ejecutar(a.getRuta());
        
        }
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        String linea = JOptionPane.showInputDialog("Ingrese la linea en la cual se empezara la depuracion");
        Archivo a =ObtenerArchivo(jTabbedPane1.getTabTitleAt(indexpestaña));
        if(a!=null){ 
            ejecutardebug(a.getRuta(),Integer.valueOf(linea));
        
        }
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    public static void imprimir(List<String> lista){
        for(String s : lista){
                template.jTextArea1.append(s+"\n");
            }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ide.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ide.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ide.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ide.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ide().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    // End of variables declaration//GEN-END:variables
}
